# Configuração Nginx para Prospectiza
# Salvar em: /etc/nginx/sites-available/prospectiza

server {
    listen 80;
    server_name _;  # Substitua por seu domínio: exemplo.com www.exemplo.com

    # Diretório dos arquivos estáticos do frontend
    root /home/ubuntu/prospectiza/web/dist;
    index index.html;

    # Configurações de segurança
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

    # Configuração para SPA (Single Page Application)
    location / {
        try_files $uri $uri/ /index.html;
        
        # Headers para cache do HTML
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Proxy para API do backend
    location /api/ {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Proxy para WebSocket (Socket.io)
    location /socket.io/ {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Configurações específicas para WebSocket
        proxy_buffering off;
        proxy_cache off;
        
        # Timeouts para WebSocket
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
    }

    # Cache para assets estáticos (JS, CSS, imagens, fontes)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Compressão
        gzip_static on;
    }

    # Configurações de compressão
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Logs específicos para este site
    access_log /var/log/nginx/prospectiza_access.log;
    error_log /var/log/nginx/prospectiza_error.log;

    # Limites de upload (se necessário para futuras funcionalidades)
    client_max_body_size 10M;
}

# Configuração HTTPS (descomente após configurar SSL)
# server {
#     listen 443 ssl http2;
#     server_name seu-dominio.com www.seu-dominio.com;
# 
#     ssl_certificate /etc/letsencrypt/live/seu-dominio.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/seu-dominio.com/privkey.pem;
#     
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# 
#     # Incluir todas as configurações do bloco HTTP acima
#     # ... (copiar configurações do server block HTTP)
# }

# Redirecionamento HTTP para HTTPS (descomente após configurar SSL)
# server {
#     listen 80;
#     server_name seu-dominio.com www.seu-dominio.com;
#     return 301 https://$server_name$request_uri;
# }
